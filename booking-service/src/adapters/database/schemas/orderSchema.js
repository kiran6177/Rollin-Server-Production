import mongoose from "mongoose";

const movieSchema = new mongoose.Schema({
    movie_id:{
        type:String,
        required:true
    },
    title:{
        type:String,
        required:true
    },
    language:{
        type:String,
        required:true
    },
    overview:{
        type:String,
        default:"UNAVAILABLE"
    },
    release_date:{
        type:Date,
        required:true
    },
    popularity:{
        type:Number,
        default:0
    },
    rating:{
        type:Number,
        default:0
    },
    genres:{
        type:Array,
        default:[]
    },
    video_link:{
        type:String,
        default:null
    },
    runtime:{
        type:Number,
        default:0
    },
    backdrop_path:{
        type:String,
        required:true
    },
    poster_path:{
        type:String,
        required:true
    },
    cast:{
        type:Array,
    },
    crew:{
        type:Array,
    }
})

const orderSchema = new mongoose.Schema({
    order_id:{
        type:String,
        required:true
    },
    attachment_details:{
        email:{
            type:String,
            required:true
        },
        mobile:{
            type:Number,
            required:true
        }
    },
    show_id:{
        type:String,
        required:true
    },
    show_date:{
        type:Date,
        required:true
    },
    show_time:{
        type:String,
        required:true
    },
    seatdata:[{
        tier_name:{
            type:String,
            required:true
        },
        rate:{
            type:Number,
            required:true
        },
        seats:[{
            type:String,
            required:true
        }]
    }],
    movie:{
        type:movieSchema
    },
    screendata:{
        screen_id:{
            type:String,
            required:true
        },
        screen_name:{
            type:String,
            required:true
        }
    },
    theatre_id:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'theatre',
        required:true
    },
    user_id:{
        type:mongoose.Schema.Types.ObjectId,
        ref:'user',
        required:true
    },
    billing_amount:{
        type:Number,
        required:true
    },
    refund_id:{
        type:String,
        default:null
    },
    refund_status:{
        type:String,
        enum:['NOT_INITIATED','REFUNDED','PROCESSING'],
        default:'NOT_INITIATED'
    },
    payment_session_id:{
        type:String,
        default:null
    },
    payment_status:{
        type:String,
        required:true,
        default:"PROCESSING"
    },
    createdAt:{
        type:Date,
        default:Date.now()
    },

})

orderSchema.index({order_id:1})

export default mongoose.model('order',orderSchema)